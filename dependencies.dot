
strict digraph {
	//	Frontend
	core		[shape="diamond"];

	//	Backend (External CC)
	cc		[shape="hexagon"];

	//	Stateless functionality.
	common		[];				// Critcl specific general utilities
	dict84		[];				// Forward compatible dict command for 8.4
	lassign84	[];				// Forward compatible lassign command for 8.4
	//	Only transient state during operation.
	scan		[];				// Static scanner of .(cri)tcl files

	//	File container
	data		[shape="triangle"];		// Container for template and other data files

	//	System state (in-memory databases)
	api		[shape="box"];			// Management of stubs tables, i.e. package APIs
	at		[shape="box"];			// Management of #line information in generated code
	cache		[shape="box"];			// Management of the result cache (directory)
	ccconfig	[shape="box"];			// Configuration information for external CC, multi-platform
	cdefs		[shape="box"];			// Management of the collected C definitions.
	gopt		[shape="box"];			// Global option management
	log		[shape="box"];			// Log file handling
	meta		[shape="box"];			// Management of TEApot meta data
	tags		[shape="box"];			// Management of general indicator flags
	typeconv	[shape="box"];			// Management of type conversions (args, results) for cproc
	usrconfig	[shape="box"];			// Management of user-specified configuration options
	uuid		[shape="box"];			// Code hashes for change detection.
	who		[shape="box"];			// Management of the "current" file.

	//	Dependencies
	//	A -> B   <==> A is-used-by B

	at		->	typeconv;
	cache		->	api;
	cache		->	ccconfig;
	cache		->	cdefs;
	cache		->	log;
	cdefs		->	api;
	cdefs		->	usrconfig;
	//common		->	api;
	//common		->	cache;
	//common		->	ccconfig;
	//common		->	cdefs;
	//common		->	log;
	//common		->	meta;
	//common		->	scan;
	data		->	common;
	data		->	cdefs;
	//dict84		->	api;
	//dict84		->	ccconfig;
	//dict84		->	cdefs;
	//dict84		->	meta;
	//dict84		->	scan;
	//dict84		->	tags;
	//dict84		->	usrconfig;
	//dict84		->	uuid;
	gopt		->	at;
	gopt		->	cdefs;
	//lassign84	->	api;
	//lassign84	->	at;
	//lassign84	->	ccconfig;
	//lassign84	->	scan;
	//lassign84	->	typeconv;
	meta		->	api;
	meta		->	cdefs;
	meta		->	scan;
	scan		->	cdefs;
	tags		->	api;
	tags		->	cdefs;
	usrconfig	->	scan;
	uuid		->	api;
	uuid		->	cdefs;
	uuid		->	usrconfig;
	who		->	at;

	cache		->	cc;
	ccconfig	->	cc;
	cdefs		->	cc;
	//common		->	cc;
	data		->	cc;
	gopt		->	cc;
	log		->	cc;
	meta		->	cc;
	tags		->	cc;
	uuid		->	cc;

	api		->	core;
	at		->	core;
	cache		->	core;
	cc		->	core;
	cdefs		->	core;
	//common		->	core;
	data		->	core;	// for CollectEmbedded only.
	gopt		->	core;
	meta		->	core;
	scan		->	core;
	tags		->	core;
	typeconv	->	core;
	usrconfig	->	core;
	uuid		->	core;
	who		->	core;
}
